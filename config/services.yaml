# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\Codechallenge\Shared\Infrastructure\Bus\Command\CommandBus:
        arguments: ['@messenger.bus.commands']

    App\Codechallenge\Shared\Infrastructure\Bus\Query\QueryBus:
        arguments: ['@messenger.bus.queries']

    App\Codechallenge\Shared\Infrastructure\Bus\Event\EventBus:
        arguments: ['@messenger.bus.events']
    
    App\Codechallenge\Billing\Application\CommandHandler\:
        resource: '../src/Codechallenge/Billing/Application/CommandHandler'
        tags: [{ name: 'messenger.message_handler', bus: 'messenger.bus.commands' }]

    App\Codechallenge\Billing\Application\QueryHandler\:
        resource: '../src/Codechallenge/Billing/Application/QueryHandler'
        tags: [{ name: 'messenger.message_handler', bus: 'messenger.bus.queries' }]

    #App\Codechallenge\Billing\Domain\EventHandler\:
    #    resource: '../src/Codechallenge/Billing/Domain/EventHandler'
    #    tags: [{ name: 'messenger.message_handler', bus: 'messenger.bus.events' }]
    
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    #App\Codechallenge\Auth\Domain\Model\User\UserRepository: '@App\Codechallenge\Auth\Infrastructure\Domain\Model\User\DoctrineUserRepository'
    
    # Services not currently used marked as public in order to access them from container for test purposes
    #App\Codechallenge\Auth\Application\Service\User\DeleteUserService:
    #    public: true
    #App\Codechallenge\Auth\Application\Service\User\DeleteApiTokenService:
    #    public: true
    App\Codechallenge\Catalog\Application\Service\GetProductOfIdService:
        public: true